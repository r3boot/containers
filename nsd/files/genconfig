#!/bin/sh

ETCDCTL='/usr/bin/etcdctl'
ETCDCTL_ENDPOINTS='10.42.16.252:2379'
ETCDCTL_API=3
BASE='/nsd'

UNBOUND_CONF='/etc/nsd/nsd.conf'
NEWCONF='/etc/nsd/nsd.conf.new'

# Do we use dynamic configuration at all?
if [[ -z "${ETCDCTL_ENDPOINTS}" ]]; then
  echo "[W] ETCDCTL_ENDPOINTS not defined"
  exit 0
fi

# Check if nsd directory is configured
${ETCDCTL} get ${BASE} >/dev/null
if [[ ${?} -ne 0 ]]; then
  echo "[W] No nsd settings found under etcd"
  exit 0
fi

echo -n "[+] Generating nsd.conf: "

rm -f ${NEWCONF}

echo -e "server:" > ${NEWCONF}
${ETCDCTL} get --prefix ${BASE} --keys-only | egrep -v "${BASE}/zones/|${BASE}/keys/|^$" | while read ETCD_KEY; do
  KEY="$(echo ${ETCD_KEY} | sed -e "s,${BASE}/,,g")"
  VALUE="$(${ETCDCTL} get ${ETCD_KEY} | tail -1)"

  if [[ -z "${VALUE}" ]]; then
    continue
  fi

  if [[ "${KEY}" == "ip-address" ]]; then
    echo ${VALUE} | sed -e 's/,/\n/g' | while read IP; do
      echo "  ${KEY}: ${IP}" >> ${NEWCONF}
    done
  else
    echo "  ${KEY}: ${VALUE}" >> ${NEWCONF}
  fi

done

cat >>${NEWCONF} <<EOF

remote-control:
  control-enable: yes
  control-interface: 127.0.0.1
  control-interface: ::1
  control-port: 8952
  server-key-file: "/etc/nsd/nsd_server.key"
  server-cert-file: "/etc/nsd/nsd_server.pem"
  control-key-file: "/etc/nsd/nsd_control.key"
  control-cert-file: "/etc/nsd/nsd_control.pem"
EOF

${ETCDCTL} get --prefix ${BASE}/keys/ --keys-only | egrep -v "^$" | while read ETCD_KEY; do
  KEY="$(echo ${ETCD_KEY} | sed -e "s,${BASE}/keys/,,g")"
  VALUE="$(${ETCDCTL} get ${ETCD_KEY} | tail -1)"
  ALGO="$(echo ${VALUE} | cut -d^ -f1)"
  SECRET="$(echo ${VALUE} | cut -d^ -f2-)"

  cat >> ${NEWCONF} <<EOF

key:
  name: "${KEY}"
  algorithm: ${ALGO}
  secret: ${SECRET}
EOF
done

${ETCDCTL} get --prefix ${BASE}/zones/ --keys-only | egrep -v "^$" | sed -e "s,${BASE}/zones/,,g" | while read ZONE; do
  cat >> ${NEWCONF} <<EOF

zone:
  name: "${ZONE}"
  zonefile: "db.${ZONE}"
EOF
  nsd-checkzone ${ZONE} /srv/nsd/zones/db.${ZONE}
done

echo "done"

nsd-checkconf ${NEWCONF} && mv -v ${NEWCONF} ${UNBOUND_CONF}
